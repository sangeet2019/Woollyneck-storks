# We have paired end whole genome sequences generated by Illumina. These sequences are from DNA extracted using toe-pad of museum samples of birds 

#Generate Fastqc report from raw reads for each forward and reverse reads to evaluate quality of raw sequences 

/dir/Fastqc/fastqc /dir/22055D-01-04_S0_L001_R1_001/22055D-01-04_S0_L001_R1_001.fastq.gz

#ALIGNING THE RAW SEQUENCE (both forward and reverse reads) WITH REFERENCE GENOME USING Burrow-Wheeler Aligner (https://bio-bwa.sourceforge.net/bwa.shtml)
#Reference genome of Maguari stork was used 

/dir/bwa/bwa mem -t 8 -R '@RG\tID:22055D-01-04\tSM:22055D-01-04' /dir/GCA_017639555.1_bCicMag1.pri_genomic.fasta  /dir/22055D-01-04_S0_L001_R1_001.fastq.gz /dir/22055D-01-04_S0_L001_R2_001.fastq.gz > 22055D-01-04_alignment.sam

#Converting SAM (Sequence alignment map) file to BAM (Binary alignment map)

java -Xmx20g -jar /dir/picard.jar SamFormatConverter INPUT=22055D-01-04_alignment.sam OUTPUT=22055D-01-04_alignment.bam VALIDATION_STRINGENCY=SILENT

#BAM to sorted BAM - sorting by coordinates

java -Xmx20g -jar /dir/picard.jar SortSam INPUT=22055D-01-04_alignment.bam OUTPUT=22055D-01-04_alignment.sorted.bam SORT_ORDER=coordinate VALIDATION_STRINGENCY=SILENT TMP_DIR=/dir/seqalignment

#Mark duplicate reads to remove duplicates such that only one copy is present 

$ java -Xmx20g -jar /dir/picard.jar MarkDuplicates INPUT=22055D-01-04_alignment.sorted.bam OUTPUT=22055D-01-04_alignment.sorted.MarkDup.bam METRICS_FILE=DupMetrics ASSUME_SORTED=true VALIDATION_STRINGENCY=SILENT MAX_FILE_HANDLES_FOR_READ_ENDS_MAP=1000


#Calling haplotypes using haplotypecaller (https://gatk.broadinstitute.org/hc/en-us/articles/360037225632-HaplotypeCaller)

$ /dir/gatk-4.2.0.0/gatk HaplotypeCaller --input 22055D-01-04_alignment.sorted.MarkDup.bam --output 22055D-01-04_alignment.sorted.MarkDup.bam.g.vcf --reference /dir/GCA_017639555.1_bCicMag1.pri_genomic.fasta -mbq 20 -ERC GVCF

#Combine GVCF file from all samples to get a single GVCF file using GATK (https://gatk.broadinstitute.org/hc/en-us/articles/360037053272-CombineGVCFs)

/dir/gatk-4.2.0.0/gatk CombineGVCFs --reference /dir/GCA_017639555.1_bCicMag1.pri_genomic.fasta --output All.wnssamples.raw.variants.v1.g.vcf --variant 22055D-01-04_alignment.sorted.MarkDup.bam.g.vcf --variant *_alignment.sorted.MarkDup.bam.g.vcf --variant *_alignment.sorted.MarkDup.bam.g.vcf --variant *_alignment.sorted.MarkDup.bam.g.vcf --variant *_alignment.sorted.MarkDup.bam.g.vcf --variant *_alignment.sorted.MarkDup.bam.g.vcf --variant *_alignment.sorted.MarkDup.bam.g.vcf --variant *_alignment.sorted.MarkDup.bam.g.vcf --variant *_alignment.sorted.MarkDup.bam.g.vcf --variant *_alignment.sorted.MarkDup.bam.g.vcf --variant *_alignment.sorted.MarkDup.bam.g.vcf --variant *_alignment.sorted.MarkDup.bam.g.vcf


#Call genotype from combined GVCF file (https://gatk.broadinstitute.org/hc/en-us/articles/360037057852-GenotypeGVCFs)

/dir/gatk-4.2.0.0/gatk GenotypeGVCFs --reference /dir/GCA_017639555.1_bCicMag1.pri_genomic.fasta   --variant All.wnssamples.raw.variants.v1.g.vcf --output All.wnssamples.raw.variants.v1.vcf.gz


#Selecting only SNP from variant file (https://gatk.broadinstitute.org/hc/en-us/articles/360037055952-SelectVariants)

/dir/Tools/gatk-4.2.0.0/gatk SelectVariants --reference /dir/GCA_017639555.1_bCicMag1.pri_genomic.fasta  --variant All.wnssamples.raw.variants.v1.vcf.gz --select-type-to-include SNP --output All.wnssamples.raw.SNPs.v1.vcf.gz --restrict-alleles-to BIALLELIC

#Now indexing using BCFTOOLs. It is necessary to index vcf in order to generate statistics associated with it (https://samtools.github.io/bcftools/bcftools.html)

$ /dir/bcftools index -t -f All.wnssamples.raw.SNPs.v1.vcf.gz

# Get vcf statistics such as mapping quality (MQ) so that vcf can be filtered for downstream analysis (https://vcftools.sourceforge.net/man_latest.html)
#stats generated for largest chromosome 
$ /dir/vcftools_0.1.13/bin/vcftools --gzvcf All.wnssamples.raw.SNPs.v1.vcf.gz --get-INFO BaseQRankSum --get-INFO DP --get-INFO FS --get-INFO MQ --get-INFO MQRankSum --get-INFO ReadPosRankSum --get-INFO QUAL  --get-INFO QD -- chr CM030194.1

#Based on these stats, filtering variants that pass below filter 

$ /dir/gatk-4.2.0.0/gatk VariantFiltration --reference /dir/GCA_017639555.1_bCicMag1.pri_genomic.fasta --variant All.wnssamples.raw.SNPs.v1.vcf.gz --output All.wnssamples.v1.snp.VF.vcf.gz --filter-name "my_filter1" --filter-expression "FS > 100.0" --filter-name "my_filter2" --filter-expression "MQ < 50.0" --filter-name "my_filter3" --filter-expression "MQRankSum < -5.0" --filter-name "my_filter4" --filter-expression "ReadPosRankSum < -4.0" --filter-name "my_filter5" --filter-expression "BaseQRankSum < -5.0" --filter-name "my_filter6" --filter-expression "DP > 500" --filter-name "my_filter7" --filter-expression "DP < 10" --filter-name "my_filter8" --filter-expression "QD < 5.0" 

>> Finally, filter for missing data. Only include those SNPs that are present in at least two samples

/dir/vcftools_0.1.13/bin/vcftools --gzvcf All.wnssamples.v1.snp.filtered.Q100.GQ10.vcf.recode.vcf --max-missing 0.17 --recode --recode-INFO-all --out All.wnssamples.v1.snp.filtered.Q100.GQ10.missing2

>> Filtering snps that are present in all the samples 

/dir/vcftools_0.1.13/bin/vcftools --gzvcf All.wnssamples.v1.snp.filtered.Q100.GQ10.vcf.recode.vcf --max-missing 1 --recode --recode-INFO-all --out All.wnssamples.v1.snp.filtered.Q100.GQ10.maxmissing1
